<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
   "https://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en">
<head>
  <meta charset="utf-8">

  <title>Carcassonne challenger</title>
  <meta name="description" content="Challenges for Carcassonne Solo">
  <meta name="author" content="C Maya">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="mobile-web-app-capable" content="yes">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

 
  <style>
html, body {
  height: 99%;
  margin: 0;
  font-size: 4.5vh;
  font-family: carcaFont;
}
#wrapper {
  display: flex; 
  flex-direction: column; 
  height: 100%;
  
}
#header, #footer {
  /* height: 15vh; */
  padding: 1.5%;
  text-align: center;
  min-height: 60px;

} 
#content {
  flex: 1; 
  overflow: auto; 
  text-align: center;
}

img{
    max-height: 100%;
    /* min-height: 60px; */
    }

#currentColor{
  max-height: 12vh;
}

#tile{
    max-width:80vw;
    max-height:80%;
    height: 80vw;
}

input, select, button{
  padding: 10px 10px;
  margin: 8px 0;
  max-height: 100%;
  box-sizing: border-box;
  font-size: 3.5vh; 
  outline:none;
  font-family: carcaFont;

}

button {
  background-color: #ffffff; /* Green */
  border: none;
  color: rgb(0, 0, 0);
  /* padding: 15px 32px; */
  text-align: center;
  text-decoration: none;
  display: inline-block;

}

button:disabled  {
  background-color: #ffffff; /* Green */
  border: none;
  color: rgb(158, 158, 158);
}

.btns{
    border: 2px solid black;
}

.bigfont{
    font-size: 11vh;
}

#seed {
  /* width: 10%; */
  background-color: transparent;
  border: 0px solid; 
  text-align: center;
    outline: 0;
    border-bottom: 1px solid;
}

#welcome {
  display: block; /* Hidden by default */
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  overflow: auto; /* Enable scroll if needed */
  background-color: rgb(0,0,0); /* Fallback color */
  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

#welcomeContent {
  background-color: #fefefe;
  margin: 3% auto; /* 5% from the top and centered */
  padding: 5%;
  border: 1px solid #888;
  width: 80%; /* Could be more or less, depending on screen size */
  text-align: center;
}
 
#text{
  font-family: Verdana, Geneva, Tahoma, sans-serif;
  font-size: 2.5vh;
  text-align: left;
}

     
.glow {
  -webkit-animation: glow 1s ease-in-out infinite alternate;
  -moz-animation: glow 1s ease-in-out infinite alternate;
  animation: glow 1s ease-in-out infinite alternate;
}

@-webkit-keyframes glow {
  from {
    text-shadow: 0 0 0.1em white, 0 0 0.2em white, 0 0 0.3em white, 0 0 0.5em gold;
  }
  
  to {
    text-shadow: 0 0 0.2em white, 0 0 0.3em gold, 0 0 0.4em gold, 0 0 0.6em gold;
  }
} 


@font-face {
    font-family: 'carcaFont';
    src: url('font/LindsayBecker.woff2') format('woff2'),
        url('font/LindsayBecker.woff') format('woff');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
}
 
  </style>


</head>

<body onload="setDefault()">

<div id="welcome">
  <div id="welcomeContent">
    <div id="title">Carcassonne Solo Challenger</div>
    <div id="text">
    <p>This tool makes easy the organization of challenges following the official solo variant for Carcassonne (<a target="_blank" href="https://www.hans-im-glueck.de/_Resources/Persistent/5e28ae929b2a02bb8feccd2e2315c98f2ed58d9b/CarcBasis_SoloRegel_9_E.pdf">see rules here</a>).</p>

  <p>Each challenge is identifiable with a unique number, so you can share it with anyone using the Share button. Go and challenge your friends!</p>

      The basic idea is:
      <ol>
        <li>Place the starting tile on the table</li>
        <li>In the app press the right arrow to see the next tile</li>
        <li>Look for that particular tile, and place it on the table</li>
        <li>Deploy a meeple of the respective color (as shown in the app) according to the rules</li>
        <li>Press the right arrow again to see the next tile</li>
        <li>Repeat until no tiles are left, or a meeple cannot be deployed</li>
      </ol>

      <p>For express challenges, this app also includes the <a target="_blank" href="https://www.boardgamegeek.com/boardgame/183453/carcassonne-demo-spiel">Demo-spiel</a> version with only 20 tiles. For this, you can use only 2 or 3 meeples in two colors.</p>

      <button class="btns" onclick="closeModal()">Continue</button>
    </div>
  </div>
</div>


<div id="wrapper">
    <div id="header">
        <label for="seed">Challenge #</label>
        <input id="seed" name="seed" autofocus type="number" placeholder="Enter a number">
        <!-- <label for="version">Version</label> -->
        <select name="version" id="version">
            <option value="full" selected="selected">Base game (72 tiles)</option>
            <option value="demoSpiel">Demo-Spiel (20 tiles)</option>
            <option value="fur2">Für 2 (48 tiles)</option>
          </select>
          <button class="btns" onclick="share()">Share</button>
    </div>
    <div id="content">
            <img id="tile">
        <div id="counter">

        </div>
    </div>
    <div id="footer">
    <button id="previous" class="bigfont" onclick="show_image('left')">↢</button>
    <img id="currentColor">
    <button id="next" class="bigfont" onclick="show_image('right')">↣</button>
    </div>
</div>

<script>
    //listeners
    document.getElementById("seed").addEventListener("input", shuffleThis)
    document.getElementById("version").addEventListener("change", shuffleThis)
    //button actions are on buttons
   
   
function closeModal() {
  document.getElementById("welcome").style.display = "none";
}


    //Shuffle an array using a particular seed using translation array.length times
function shuffle(source_array, seed) {
  //https://stackoverflow.com/a/53758827
  var array = source_array.slice(0)
  var m = array.length, t, i;
  while (m) {
   i = Math.floor(random(seed) * m--); 
   t = array[m];
    array[m] = array[i];
    array[i] = t;
    ++seed                                  
  }
  return array;
}


//Simple pseudorandom generator
function random(seed) {
  //https://stackoverflow.com/a/53758827
  seed = seed + 123456
  var x = Math.sin(seed++) * 10000; 
  return x - Math.floor(x);
}


//Declare lasttile as global variable
var lasttile = 0
   
//Check if some seed is in the URL if not define a random number
function setDefault(){
  const queryString = window.location.search;
  let seed=Math.floor(Math.random() * 1000000); //Random number by default
  let version="full"
  if (queryString){
      const urlParams = new URLSearchParams(queryString);
      seed = urlParams.get('s')
      version = urlParams.get('v')
      if (urlParams.get('l')){
         lasttile = urlParams.get('l')
      }
     
  }
  document.getElementById("seed").value = seed;
  document.getElementById("version").value = version;

  //initial shuffle
  shuffleThis()
}


//Some globals for tile control
var images = [];
var index = 0;
var nmeeples = 0


//Call shuffle for each particular set
function shuffleThis(){
    images = [];
    index = 0;
    var array = [];
    switch (document.getElementById("version").value) {
    case "demoSpiel":
        array = demoSpiel;
        nmeeples = 2;
        break;
    case "fur2":
        array = fur2;
        nmeeples = 2
        break;
    case "full":
        array = full;
        nmeeples = 3
    }

    //recall seed
    seed = document.getElementById("seed").value
    //shuffle and  put array of images in global variable
    images = shuffle(array, seed)
    //add as first image starting tile
    images.unshift("startingTile",)

    //check buttons
    checkButtons()

    //Put first image
    document.getElementById("tile").src = "tiles/" + images[0] + ".jpg";
    
}


//Tile slideshow control
function show_image(direction)
{
  if (direction == "left")
  {
    index--;
  }
  else
  {
    index++;
  }
  checkButtons()
  
  document.getElementById("tile").src = "tiles/" + images[index] + ".jpg";
}


//Check if the slideshow is at the begining or end and disable buttons
function checkButtons(){
    if (index == 0)
        {
            document.getElementById("previous").disabled = true;
        }else{
            document.getElementById("previous").disabled = false;
        }

    if (index == images.length - 1)
        {
        document.getElementById("next").disabled = true;
        }else{
        document.getElementById("next").disabled = false;
        }
    

    //Define counter text
    if (index == 0){
        document.getElementById("counter").innerText = "Starting tile";
        //Define null meeple in starting tile
        document.getElementById("currentColor").src = "meeples/null.png"
        }else{
        document.getElementById("counter").innerText = index + 1 + " of " + images.length;
           if ((index + 1) == lasttile){
               document.getElementById("counter").classList.add("glow");
           }else{
               document.getElementById("counter").classList.remove("glow");
           }
        //Define meeple order image
        document.getElementById("currentColor").src = "meeples/" + (index - 1)  % nmeeples + ".png"
    }

    
    
}


//Share function
function share() {
   var textLasttile = ""
  if (index > 0){
   let textIndex = index + 1  
   textLasttile = "&l="+ textIndex
  }
  var person = prompt("Copy the following URL to share this challenge", window.location.href.split('?')[0] + "?s="+seed+"&v="+document.getElementById("version").value + textLasttile);

}

//TILE DEFINITIONS

//Define list of tiles for Carcassonne demo spiel, but starting tile
const demoSpiel = [
  "A",
  "B",
  "D", //miss P
  "E",
  "F",
  "Hg",
  "I",
  "J-rev", "K", //miss H real y D (replace K tile)
  "L",
  "M",
  "Ng",
  "P", //miss W
  "Ug",
  "Vg", "Vg",
  "W", "W",
  "X"
]

const full =[
  "A","A", //miss H
  "B","B","B","B", //miss F, D
  "C",
  "D","D","D", //miss F, P
  "E","E","E","E", //miss F
  "Eg",
  "F", "F", //miss W
  "G",
  "H","H", //miss H
  "Hg",
  "I",
  "Ig",
  "J", "J", "J", //miss F, C
  "K", "K", "K", //miss H, D
  "L", "L", "L",
  "M",
  "Mg",
  "N", "N", //miss W
  "Ng",
  "O", "O", //miss F
  "P", "P", "P", //miss H, W
  "Q",
  "R", "R", //miss WITHOUT WATERTOWER
  "Rg",
  "S", "S", //miss WITHOUT WATERTOWER
  "T",
  "U","U","U","U","U", //miss F, P
  "U2", "U2",
  "Ug",
  "V2", "V2", "V2", "V2", "V2", "V2", //miss P, P, F
  "V2", "V2",
  "Vg",
  "W", "W", "W", "W", 
  "X"
]           

const fur2 = [
  "A", 
  "B", "B",
  "D", "D", "D", 
  "E",
  "Eg",
  "F", "F",
  "G",
  "H",
  "Hg",
  "I",
  "Ig",
  "J", "J",
  "J-rev", 
  "K", 
  "L", "L", "L",
  "N", "N",
  "Ng", "Ng",
  "O", "O",
  "P", 
  "Q",
  "S", "S", 
  "T", 
  "U", "U",
  "U2", "U2",
  "V2", "V2", "V2", "V2", 
  "Vg",
  "W", "W", "W",
  "A2", "D2"
]
    


</script>


</body>
</html>
